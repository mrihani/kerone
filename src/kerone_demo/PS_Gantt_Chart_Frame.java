/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kerone_demo;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.Date;
import static kerone_demo.Gantt_Chart.chart;
import static kerone_demo.Gantt_Chart.createDataset3;
import static kerone_demo.Gantt_Chart.s1;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.IntervalCategoryDataset;
import org.jfree.data.gantt.Task;
import org.jfree.data.gantt.TaskSeries;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.time.SimpleTimePeriod;

/**
 *
 * @author Fadel
 */
public class PS_Gantt_Chart_Frame extends javax.swing.JFrame {

    /**
     * Creates new form Test_Frame
     */
    public PS_Gantt_Chart_Frame() {
//          IntervalCategoryDataset dataset = createDataset3();
//          JFreeChart chart = createChart(dataset);
//
//        // add the chart to a panel...
//         ChartPanel chartPanel = new ChartPanel(chart);
//     
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addContainerGap())
        );

        final IntervalCategoryDataset dataset = createDataset3();
        chart = createChart(dataset);

        // add the chart to a panel...
        ChartPanel chartPanel = new ChartPanel(chart);

        jPanel1.add(chartPanel);
        jPanel1.validate();
        chart = createChart(dataset);

        // add the chart to a panel...
        ChartPanel chartPanel2 = new ChartPanel(chart);

        jPanel3.add(chartPanel2);
        jPanel3.validate();
        chart = createChart(dataset);

        // add the chart to a panel...
        ChartPanel chartPanel3 = new ChartPanel(chart);

        jPanel2.add(chartPanel3);
        jPanel2.validate();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PS_Gantt_Chart_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PS_Gantt_Chart_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PS_Gantt_Chart_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PS_Gantt_Chart_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
                PS_Gantt_Chart_Frame frame =  new PS_Gantt_Chart_Frame();
                 int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
                int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
                frame.setLocation(x, y);
                frame.setVisible(true);
            }
        });
    }
 public static JFreeChart createChart(final IntervalCategoryDataset dataset) {
        final JFreeChart chart = ChartFactory.createGanttChart(
                "VM Scheduling", // chart title
                "VM", // domain axis label
                "Time", // range axis label
                dataset, // data
                false, // include legend
                true, // tooltips
                false // urls
        );
        //chart.getCategoryPlot().getDomainAxis().setMaxCategoryLabelWidthRatio(10.0f);
        return chart;
    }
 
  public  IntervalCategoryDataset createDataset3() {

     
      TaskSeries  s1 = new TaskSeries("Scheduled");
        Task task1 = new Task("VM1",
                new SimpleTimePeriod(date(10, Calendar.MAY, 2016, 15, 26, 30),
                        date(10, Calendar.MAY, 2016, 15, 26, 31)));
        Task task2 = new Task("VM2",
                new SimpleTimePeriod(date(10, Calendar.MAY, 2016, 15, 26, 31),
                        date(10, Calendar.MAY, 2016, 15, 26, 32)));
        Task task3 = new Task("VM3",
                new SimpleTimePeriod(date(10, Calendar.MAY, 2016, 15, 26, 32),
                        date(10, Calendar.MAY, 2016, 15, 26, 33)));
        Task task4 = new Task("VM4",
                new SimpleTimePeriod(date(10, Calendar.MAY, 2016, 15, 26, 33),
                        date(10, Calendar.MAY, 2016, 15, 26, 34)));
        Task task1_2 = new Task("VM1",
                new SimpleTimePeriod(date(10, Calendar.MAY, 2016, 15, 26, 34),
                        date(10, Calendar.MAY, 2016, 15, 26, 35)));
         Task task2_2 = new Task("VM2",
                new SimpleTimePeriod(date(10, Calendar.MAY, 2016, 15, 26, 36),
                        date(10, Calendar.MAY, 2016, 15, 26, 37)));
          Task task3_2 = new Task("VM3",
                new SimpleTimePeriod(date(10, Calendar.MAY, 2016, 15, 26, 35),
                        date(10, Calendar.MAY, 2016, 15, 26, 36)));
        
        task1_2.addSubtask(task1_2);
        task1_2.addSubtask(task1);
        s1.add(task1_2);
         task2.addSubtask(task2);
        task2.addSubtask(task2_2);
        s1.add(task2);
         task3.addSubtask(task3);
        task3.addSubtask(task3_2);
        s1.add(task3);
        s1.add(task4);
        final TaskSeriesCollection collection = new TaskSeriesCollection();

        collection.add(s1);
        //  collection.add(s2);

        return collection;
    }
   private static Date date(final int day, final int month, final int year, final int hour, final int min, final int sec) {

        final Calendar calendar = Calendar.getInstance();
        calendar.set(year, month, day, hour, min, sec);
        final Date result = calendar.getTime();
        return result;

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
